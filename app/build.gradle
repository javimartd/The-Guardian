apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.javimartd.theguardian"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode versionMajor * 1000 + versionMinor * 100 + versionPatch * 10
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        pro {
            try {
                /*storeFile = file(project.property("THE_GUARDIAN_STORE_FILE"))
                storePassword = project.property("THE_GUARDIAN_STORE_PASSWORD")
                keyAlias = project.property("THE_GUARDIAN_APP_KEY_ALIAS")
                keyPassword = project.property("THE_GUARDIAN_APP_KEY_PASSWORD")*/
            } catch (e) {
                throw new InvalidUserDataException("You should define THE_GUARDIAN_STORE and THE_GUARDIAN_APP_KEY in gradle.properties. " + e.getMessage())
            }
        }

        pre {
            // ...
        }
        uat {
            // ...
        }
        dev {
            // ...
        }
    }

    flavorDimensions "mode"

    productFlavors {

        dev {
            dimension "mode"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            buildConfigField "String", "THE_GUARDIAN_API_KEY", '"db0d0891-0604-403a-9fad-f8ea5a76dbcb"'

        }
        uat {
            dimension "mode"
            applicationIdSuffix ".uat"
            versionNameSuffix "-uat"
            buildConfigField "String", "THE_GUARDIAN_API_KEY", '"db0d0891-0604-403a-9fad-f8ea5a76dbcb"'
        }
        pre {
            dimension "mode"
            applicationIdSuffix ".pre"
            versionNameSuffix "-pre"
            buildConfigField "String", "THE_GUARDIAN_API_KEY", '"db0d0891-0604-403a-9fad-f8ea5a76dbcb"'
        }
        pro {
            dimension "mode"
            buildConfigField "String", "THE_GUARDIAN_API_KEY", '"db0d0891-0604-403a-9fad-f8ea5a76dbcb"'
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
        }
        release {
            debuggable false
            productFlavors.pro.signingConfig signingConfigs.pro
            productFlavors.pre.signingConfig signingConfigs.pre
            productFlavors.uat.signingConfig signingConfigs.uat
            productFlavors.dev.signingConfig signingConfigs.dev

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

androidExtensions {
    experimental = false
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayout"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:design:$support_version"

    // lifeCycle
    implementation "android.arch.lifecycle:extensions:$lifeCycle_version"
    annotationProcessor "android.arch.lifecycle:compiler:$lifeCycle_version"

    // anko
    implementation "org.jetbrains.anko:anko-common:$anko_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // dagger
    //annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // retrofit OkHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // images
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
